services:
  # .NET API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bonussystem-api
    ports:
      - "${API_HTTP_PORT}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:8080
      - AppDb__Type=${APP_DB_TYPE}
      - AppDb__JwtSecret=${APP_JWT_SECRET}
      - AppDb__TokenExpirationMinutes=${APP_TOKEN_EXPIRATION}
      - PostgresOptions__ConnectionString=Host=postgres;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - PostgresOptions__EnableDetailedLogging=true
    volumes:
      - ./src:/src
    depends_on:
      - postgres
    restart: always

  # Frontend Web UI
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: bonussystem-frontend
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      - REACT_APP_API_URL=
    depends_on:
      - api
    restart: always

  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: bonussystem-postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db:/docker-entrypoint-initdb.d
    restart: always

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bonussystem-pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: always

volumes:
  postgres-data:
  pgadmin-data:
