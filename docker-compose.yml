services:
  # .NET API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
    container_name: bonussystem-api
    ports:
      - "${API_HTTP_PORT:-5001}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_URLS=http://+:8080
      - AppDb__Type=${APP_DB_TYPE:-Postgres}
      - AppDb__JwtSecret=${APP_JWT_SECRET}
      - AppDb__TokenExpirationMinutes=${APP_TOKEN_EXPIRATION:-525600}
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_DB:-bonussystem};Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-postgres};Maximum Pool Size=50;Connection Idle Lifetime=60;
    volumes:
      - ./src:/src:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/log/app
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    user: "${UID:-1000}:${GID:-1000}"

  # PostgreSQL Database
  postgres:
    image: postgres:17.4-alpine3.21
    container_name: bonussystem-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-bonussystem}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    command: ["postgres"]
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    security_opt:
      - no-new-privileges:true
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-bonussystem}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    shm_size: 256m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    user: postgres

  # pgAdmin for Development Only
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bonussystem-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@bonussystem.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=True
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
    security_opt:
      - no-new-privileges:true
    networks:
      - backend
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "1"
    profiles:
      - dev

networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1

volumes:
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local