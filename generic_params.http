# BonusSystem API Test Collection
# Enum Definitions:
# - Company Status: 0=Pending, 1=Active, 2=Suspended, 3=Closed
# - Transaction Type: 0=Earn, 1=Spend, 2=Expired, 3=SystemCredit, 4=Cancelled
# - Notification Type: 0=System, 1=Transaction, 2=Balance, 3=Promotion, 4=Warning
# - User Roles: 0=Buyer, 1=Seller, 2=Company Admin, 3=System Admin, 4=Company Observer

# Global Variables
@baseUrl = http://localhost:5001
@buyerId = 11111111-1111-1111-1111-111111111111
@companyId = 66666666-6666-6666-6666-666666666666
@defaultStoreId = 77777777-7777-7777-7777-777777777777
@transactionId = aaaaaaaa-bbbb-cccc-dddd-111111111111
@recipientId = 11111111-1111-1111-1111-111111111111
@startDate = 2024-03-01
@endDate = 2024-04-15

# Tokens (to be updated after login)
@buyerToken = 
@sellerToken = 
@adminToken = 
@observerToken = 

###############################################
# AUTHENTICATION WORKFLOWS
###############################################

# Login as Buyer
# Requires: email (unique), password (8+ chars, mixed case, number)
POST {{baseUrl}}/auth/login
Content-Type: application/json
Accept: application/json

{
    "email": "buyer1@example.com",
    "password": "Password123"
}

###

# Login as Seller
POST {{baseUrl}}/auth/login
Content-Type: application/json
Accept: application/json

{
    "email": "seller1@example.com",
    "password": "Password123"
}

###

# Login as Admin
POST {{baseUrl}}/auth/login
Content-Type: application/json
Accept: application/json

{
    "email": "admin1@example.com",
    "password": "Password123"
}

###

# Login as Observer
POST {{baseUrl}}/auth/login
Content-Type: application/json
Accept: application/json

{
    "email": "observer1@example.com",
    "password": "Password123"
}

###############################################
# BUYER OPERATIONS
###############################################

# Get Buyer Context
# Returns: Buyer profile, permitted actions
GET {{baseUrl}}/api/buyers/context
Authorization: Bearer {{buyerToken}}
Accept: application/json

###

# Get Buyer Balance
# Returns: Balance summary, total points, recent transactions
GET {{baseUrl}}/api/buyers/balance
Authorization: Bearer {{buyerToken}}
Accept: application/json

###

# Get Buyer Transaction History
# Returns: Complete transaction log (earned, spent, expired points)
GET {{baseUrl}}/api/buyers/transactions
Authorization: Bearer {{buyerToken}}
Accept: application/json

###

# Generate Buyer QR Code
# Returns: Unique QR code for store identification
GET {{baseUrl}}/api/buyers/qrcode
Authorization: Bearer {{buyerToken}}
Accept: application/json

###

# Find Stores by Category
# Query Param: category (use 'all' for complete list)
GET {{baseUrl}}/api/buyers/stores?category=all
Authorization: Bearer {{buyerToken}}
Accept: application/json

###

# Cancel Specific Transaction
# Requires: Valid transaction ID, eligible for cancellation
POST {{baseUrl}}/api/buyers/transactions/{{transactionId}}/cancel
Authorization: Bearer {{buyerToken}}
Accept: application/json

###############################################
# SELLER OPERATIONS
###############################################

# Process Earn Transaction
# Transaction Type 0: Customer earns points
POST {{baseUrl}}/api/sellers/transactions
Authorization: Bearer {{sellerToken}}
Content-Type: application/json
Accept: application/json

{
  "buyerId": "{{buyerId}}",
  "amount": 150,
  "type": 0,
  "storeId": "{{defaultStoreId}}"
}

###

# Process Spend Transaction
# Transaction Type 1: Customer spends points
POST {{baseUrl}}/api/sellers/transactions
Authorization: Bearer {{sellerToken}}
Content-Type: application/json
Accept: application/json

{
  "buyerId": "{{buyerId}}",
  "amount": 50,
  "type": 1,
  "storeId": "{{defaultStoreId}}"
}

###

# Get Buyer Balance (Seller View)
# Returns: Specific buyer's point balance
GET {{baseUrl}}/api/sellers/buyers/{{buyerId}}/balance
Authorization: Bearer {{sellerToken}}
Accept: application/json

###

# Get Store Balance
# Returns: Current points balance for specific store
GET {{baseUrl}}/api/sellers/stores/{{defaultStoreId}}/balance
Authorization: Bearer {{sellerToken}}
Accept: application/json

###

# Get Store Transactions
# Returns: All transactions processed at specific store
GET {{baseUrl}}/api/sellers/stores/{{defaultStoreId}}/transactions
Authorization: Bearer {{sellerToken}}
Accept: application/json

###############################################
# ADMIN OPERATIONS
###############################################

# Register New Company
POST {{baseUrl}}/api/admin/companies
Authorization: Bearer {{adminToken}}
Content-Type: application/json
Accept: application/json

{
    "name": "New Test Company",
    "contactEmail": "contact@newtestcompany.com",
    "contactPhone": "+1-555-123-7890",
    "initialBonusBalance": 500000
}

###

# Update Company Status
# Status: 0=Pending, 1=Active, 2=Suspended, 3=Closed
PUT {{baseUrl}}/api/admin/companies/{{companyId}}/status
Authorization: Bearer {{adminToken}}
Content-Type: application/json
Accept: application/json

1

###

# Create Pending Store Registration
POST {{baseUrl}}/api/admin/stores
Authorization: Bearer {{adminToken}}
Content-Type: application/json
Accept: application/json

{
  "companyId": "{{companyId}}",
  "name": "Pending Test Store",
  "location": "Riverside",
  "address": "789 River Rd, Anytown, AN 12345",
  "contactPhone": "+1-555-789-0123",
  "sellerIds": []
}

###

# Moderate Store (Approve Pending Registration)
PUT {{baseUrl}}/api/admin/stores/{{storeId}}/moderate?approve=true
Authorization: Bearer {{adminToken}}
Accept: application/json

###

# Credit Company Balance
# Adds specified points to company account
POST {{baseUrl}}/api/admin/companies/{{companyId}}/credit
Authorization: Bearer {{adminToken}}
Content-Type: application/json
Accept: application/json

100000

###

# Get System Transactions
# Optional filtering by companyId
GET {{baseUrl}}/api/admin/transactions?companyId={{companyId}}
Authorization: Bearer {{adminToken}}
Accept: application/json

###

# Send System Notification
# Notification Type: 0=System, 1=Transaction, 2=Balance, 3=Promotion, 4=Warning
POST {{baseUrl}}/api/admin/notifications?recipientId={{recipientId}}
Authorization: Bearer {{adminToken}}
Content-Type: application/json
Accept: application/json

{
    "message": "Special promotion this weekend!",
    "type": 3
}

###############################################
# OBSERVER OPERATIONS
###############################################

# Get Observer Context
GET {{baseUrl}}/api/observers/context
Authorization: Bearer {{observerToken}}
Accept: application/json

###

# Get System-Wide Statistics
GET {{baseUrl}}/api/observers/statistics
Authorization: Bearer {{observerToken}}
Accept: application/json

###

# Get Transaction Summary
# Requires companyId for filtering
GET {{baseUrl}}/api/observers/transactions/summary?companyId={{companyId}}
Authorization: Bearer {{observerToken}}
Accept: application/json

###

# Get Companies Overview
GET {{baseUrl}}/api/observers/companies
Authorization: Bearer {{observerToken}}
Accept: application/json

###############################################
# ADVANCED FILTERING
###############################################

# Filter Transactions by Date Range
GET {{baseUrl}}/api/admin/transactions?startDate={{startDate}}&endDate={{endDate}}
Authorization: Bearer {{adminToken}}
Accept: application/json

###

# Get Company-Specific Statistics
GET {{baseUrl}}/api/observers/statistics?companyId={{companyId}}&startDate=2024-01-01&endDate={{endDate}}
Authorization: Bearer {{observerToken}}
Accept: application/json